@page "/products"
@using Dashboard.Blazor.ViewModels;
@inject HttpClient client

<PageTitle>Products</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Products</MudText>
@if (productViews == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="productViews" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh>Product Name</MudTh>
            <MudTh>Product Description</MudTh>
            <MudTh>Product Brend</MudTh>
            <MudTh>Product Material</MudTh>
            <MudTh>Product Price</MudTh>
            <MudTh>Product Is Available</MudTh>
            <MudTh>Product Count</MudTh>
            <MudTh>Product Views</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ProductName">@context.ProductName</MudTd>
            <MudTd DataLabel="ProductDescription">@context.ProductDescription</MudTd>
            <MudTd DataLabel="ProductBrend">@context.ProductBrend</MudTd>
            <MudTd DataLabel="ProductMaterial">@context.ProductMaterial</MudTd>
            <MudTd DataLabel="ProductPrice">@context.ProductPrice</MudTd>
            <MudTd DataLabel="ProductIsAvailable">@context.ProductIsAvailable</MudTd>
            <MudTd DataLabel="ProductCount">@context.ProductCount</MudTd>
            <MudTd DataLabel="ProductViews">@context.ProductViews</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 50, 100 }"/>
        </PagerContent>
    </MudTable>
}
@code {
    private List<ProductView>? productViews;

    protected override async Task OnInitializedAsync()
    {
        productViews = await client.GetFromJsonAsync<List<ProductView>>("/api/Products");
    }
}