@page "/fetchdata"
@inject HttpClient Http
@using AdminBlazor.Shared
@using AdminBlazor.Models
@using Microsoft.AspNetCore.Http.Connections.Client
@using Microsoft.AspNetCore.SignalR.Client

<PageTitle>Products</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>
@if (products == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="products" Hover="true" SortLabel="Sort By" Elevation="0">
        <RowTemplate>
            <MudTd DataLabel="Date">@context.Id</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.ProductId</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.ProductName</MudTd>
            <MudTd DataLabel="Summary">@context.ProductCount</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}


@code {
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<Product>>("/api/Products");

        var connection = new HubConnectionBuilder()
            .WithUrl("http://localhost:3001/products-hub")
            .Build();

        connection.On<Product>("ProductAdded", product =>
        {
            products?.Add(product);
            StateHasChanged();
        });

        await connection.StartAsync();
    }
}
